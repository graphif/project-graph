name: "Nightly"
run-name: "Nightly ${{ github.run_number }}"

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    uses: ./.github/workflows/publish.yml
    with:
      android_key_alias: "upload"
      android_key_path: "upload.jks"
      app_version: 0.0.0-nightly.${{ github.run_number }}
      app_version_android: 0.0.${{ github.run_number }}
      aur_version: r${{ github.run_number }}
      aur_key_algorithm: "ed25519"
      aur_package_name: "project-graph-nightly-bin"
      delete_release: true
      prerelease: true
      release_name: Nightly ${{ inputs.version }}
      release_tag: nightly
      task_build: build:ci
      # task_build_android: build
      include_devtools: true
    secrets:
      ANDROID_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_RELEASE_PASSWORD }}
      AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

  update-homebrew:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Calculate SHA256
        id: sha256
        run: |
          VERSION="0.0.0-nightly.${{ github.run_number }}"
          URL="https://github.com/graphif/project-graph/releases/download/nightly/Project.Graph_${VERSION}_universal.app.tar.gz"
          
          curl -L -o /tmp/nightly.tar.gz "$URL"
          SHA256=$(shasum -a 256 /tmp/nightly.tar.gz | awk '{print $1}')
          
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Trigger Homebrew Tap Update
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          repository: uvuowh/homebrew-project-graph
          event-type: nightly-published
          client-payload: |
            {
              "version": "${{ steps.sha256.outputs.version }}",
              "url": "${{ steps.sha256.outputs.url }}",
              "sha256": "${{ steps.sha256.outputs.sha256 }}"
            }
